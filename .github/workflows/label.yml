name: Auto Label

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited]

jobs:
  auto-label:
    name: Auto Label
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'edited'
    
    steps:
    - name: Auto Label Issues and PRs
      uses: actions/github-script@v6
      with:
        script: |
          const title = context.payload.issue?.title || context.payload.pull_request?.title || '';
          const body = context.payload.issue?.body || context.payload.pull_request?.body || '';
          const text = (title + ' ' + body).toLowerCase();
          
          const labels = [];
          
          // Bug detection
          if (text.includes('bug') || text.includes('error') || text.includes('issue') || text.includes('problem') || text.includes('fix')) {
            labels.push('bug');
          }
          
          // Feature detection
          if (text.includes('feature') || text.includes('enhancement') || text.includes('improvement') || text.includes('new')) {
            labels.push('enhancement');
          }
          
          // Documentation detection
          if (text.includes('documentation') || text.includes('readme') || text.includes('docs') || text.includes('comment')) {
            labels.push('documentation');
          }
          
          // GUI detection
          if (text.includes('gui') || text.includes('interface') || text.includes('window') || text.includes('button')) {
            labels.push('gui');
          }
          
          // CLI detection
          if (text.includes('cli') || text.includes('command') || text.includes('terminal')) {
            labels.push('cli');
          }
          
          // Performance detection
          if (text.includes('performance') || text.includes('speed') || text.includes('optimization') || text.includes('benchmark')) {
            labels.push('performance');
          }
          
          // Testing detection
          if (text.includes('test') || text.includes('testing') || text.includes('coverage')) {
            labels.push('testing');
          }
          
          // Priority detection
          if (text.includes('urgent') || text.includes('critical') || text.includes('high priority')) {
            labels.push('priority: high');
          } else if (text.includes('low priority') || text.includes('nice to have')) {
            labels.push('priority: low');
          } else {
            labels.push('priority: medium');
          }
          
          // Add labels if any were detected
          if (labels.length > 0) {
            const number = context.payload.issue?.number || context.payload.pull_request?.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: number,
              labels: labels
            });
          }
